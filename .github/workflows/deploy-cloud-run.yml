name: Deploy to Cloud Run

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: us-central1
  SERVICE_NAME: wellness-agent

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: gcloud auth configure-docker gcr.io

      - name: Build Docker image
        run: |
          docker build -t gcr.io/${GCP_PROJECT_ID}/${SERVICE_NAME}:${GITHUB_SHA} .
          docker tag gcr.io/${GCP_PROJECT_ID}/${SERVICE_NAME}:${GITHUB_SHA} gcr.io/${GCP_PROJECT_ID}/${SERVICE_NAME}:latest

      - name: Push Docker image
        run: |
          docker push gcr.io/${GCP_PROJECT_ID}/${SERVICE_NAME}:${GITHUB_SHA}
          docker push gcr.io/${GCP_PROJECT_ID}/${SERVICE_NAME}:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${SERVICE_NAME} \
            --image gcr.io/${GCP_PROJECT_ID}/${SERVICE_NAME}:${GITHUB_SHA} \
            --platform managed \
            --region ${GCP_REGION} \
            --allow-unauthenticated \
            --port 3000 \
            --memory 1Gi \
            --cpu 1 \
            --min-instances 0 \
            --max-instances 10 \
            --concurrency 80 \
            --timeout 300 \
            --set-env-vars "NODE_ENV=production"

      - name: Get service URL
        run: |
          SERVICE_URL=$(gcloud run services describe ${SERVICE_NAME} --region=${GCP_REGION} --format="value(status.url)")
          echo "Service deployed to: ${SERVICE_URL}"

  evaluate:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Run evaluations
        run: npm run -w apps/api eval:all
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Upload evaluation results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: evaluation-results
          path: apps/api/eval-results/
